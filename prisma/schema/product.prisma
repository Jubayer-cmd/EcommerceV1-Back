model Product {
  id            String            @id @default(uuid())
  name          String
  description   String?
  image         String?           // Main product image
  price         Float             @default(0) 
  comparePrice  Float?            // Original price for showing discounts
  isActive      Boolean           @default(true)
  brand         Brand?            @relation(fields: [brandId], references: [id])
  brandId       String?
  subCategory   SubCategory?      @relation(fields: [subCategoryId], references: [id])
  subCategoryId String?
  stockQuantity Int               @default(0)
  sku           String?           // Stock Keeping Unit
  unit          Unit?             @relation(fields: [unitId], references: [id])
  unitId        String?
  hasVariants   Boolean           @default(false)
  variants      ProductVariant[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  OrderProduct  OrderProduct[]
  Category      Category?         @relation(fields: [categoryId], references: [id])
  categoryId    String?
  cartItems     CartItem[]
  wishlists     Wishlist[]
  reviews       ProductReview[]
  questions     ProductQuestion[]
  Notification  Notification[]
  promotions    PromotionProduct[]

  @@map("product")
}

model ProductVariant {
  id            String    @id @default(uuid())
  sku           String    @unique  // Stock Keeping Unit
  product       Product   @relation(fields: [productId], references: [id])
  productId     String
  name          String?   // Variant name (e.g., "Red XL") - made optional
  price         Float     // Variant-specific price
  comparePrice  Float?    // Original price for sale/discount display
  stockQuantity Int       @default(0)
  isDefault     Boolean   @default(false)
  isActive      Boolean   @default(true)
  // Store attributes as JSON instead of separate tables
  attributes    Json?     // e.g., { "color": "Red", "size": "XL" } - made optional
  images        String[]  // Array of image URLs
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  cartItems     CartItem[]
  orderItems    OrderProduct[]
  
  @@map("product_variant")
}

model Unit {
  id          String    @id @default(uuid())
  name        String    
  shortName   String    
  description String?
  isActive    Boolean   @default(true)
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("unit")
}

model ProductReview {
  id        String   @id @default(uuid())
  rating    Int
  content   String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("product_review")
}

model ProductQuestion {
  id        String   @id @default(uuid())
  question  String
  answer    String?
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("product_question")
}
